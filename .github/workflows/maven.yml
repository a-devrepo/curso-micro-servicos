# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    name: Run Unit tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B test --file ./compra/pom.xml

  build:
    needs: tests
    name: Build maven package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('./compra/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Build package war
        run: mvn -B package -DskipTests --file ./compra/pom.xml
      - name: Upload .war
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: ./compra/target/app.war
  deploy:
    needs: build
    name: Deploy on AWS Elastic Beanstalk
    runs-on: ubuntu-latest
    steps:
      - name: Download war
        uses: actions/download-artifact@v2
        with:
          name: artifact
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          use_existing_version_if_available: true
          wait_for_environment_recovery: 120
          application_name: app-spring-boot
          environment_name: App-spring-boot-env
          version_label: 1
          region: us-east-1
          deployment_package: app.war
